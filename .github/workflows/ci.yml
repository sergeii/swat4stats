name: ci

on: [push]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16.4
        env:
          POSTGRES_USER: swat4stats
          POSTGRES_PASSWORD: swat4stats
          LANG: en_US.UTF-8
          LC_ALL: en_US.UTF-8
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:7.0.10
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version
          cache: poetry

      - name: Install dependencies
        run: poetry install

      - name: Run tests
        run: poetry run pytest --assert=plain --cov=apps --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test-image:
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - id: amd64
            name: linux/amd64
            os: ubuntu-24.04
          - id: arm64
            name: linux/arm64
            os: ubuntu-24.04-arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: dockerfile/prod/Dockerfile
          load: true
          tags: testing
          platforms: ${{ matrix.platform.name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test built image
        run: docker run --rm testing python manage.py check

  make-migrations-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version
          cache: poetry

      - name: Install dependencies
        run: poetry install

      - name: Check migrations
        run: poetry run python manage.py makemigrations --check

  ruff-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: astral-sh/ruff-action@v3
        with:
          version: 0.12.7

  ruff-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: astral-sh/ruff-action@v3
        with:
          version: 0.12.7
          args: format --check --diff
