name: release

on:
  workflow_run:
    workflows: [ci]
    branches: [main]
    types: [completed]

concurrency:
  group: release
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
      new_tag: ${{ steps.version.outputs.new_tag }}
      changelog: ${{ steps.version.outputs.changelog }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Bump release version and push tag
        id: version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: false

  poetry:
    runs-on: ubuntu-latest
    needs: prepare
    if: needs.prepare.outputs.new_version != ''
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Bump version in pyproject.toml
        run: "poetry version ${{ needs.prepare.outputs.new_version }}"

      - name: Commit changes to pyproject.toml
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(poetry): bump version to ${{ needs.prepare.outputs.new_version }}"
          commit_options: "--no-verify --signoff"
          file_pattern: pyproject.toml

  publish:
    runs-on: ubuntu-latest
    needs:
      - prepare
    if: needs.prepare.outputs.new_tag != ''
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare tags for docker image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/sergeii/swat4stats
          tags: |
            type=raw,prefix=,value=${{ needs.prepare.outputs.new_tag }}
          flavor: |
            latest=true
            prefix=
            suffix=

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: dockerfile/prod/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            git_release_ver=${{ needs.prepare.outputs.new_tag }}
            git_release_sha=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.prepare.outputs.new_tag }}
          name: Release ${{ needs.prepare.outputs.new_tag }}
          body: ${{ needs.prepare.outputs.changelog }}

  deploy:
    runs-on: swat4stats-core-runner
    needs:
      - prepare
      - publish
    if: needs.prepare.outputs.new_tag != ''
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v4

      - name: Install release
        run: >-
          helm upgrade
          --install
          --debug
          --atomic
          --namespace=swat4stats
          --set image.tag=${{ needs.prepare.outputs.new_tag }}
          --set image.pullSecrets[0].name=swat4stats-registry-creds
          --set envFromSecrets[0].name=swat4stats-secrets
          swat4stats-core
          deployments/charts/swat4stats
        env:
          HELM_KUBEAPISERVER: ${{ secrets.HELM_KUBEAPISERVER }}
          HELM_KUBEINSECURE_SKIP_TLS_VERIFY: 1
          HELM_KUBETOKEN: ${{ secrets.HELM_KUBETOKEN }}
